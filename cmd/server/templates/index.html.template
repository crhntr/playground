{{- /* gotype: github.com/crhntr/playground/cmd/server.Index */ -}}
<!doctype html>
<html class="no-js" lang="us-en">
<head>
	<title>{{if .Name}}{{.Name}} | {{end}}Playground</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/htmx/2.0.4/htmx.min.js"
	        integrity="sha512-2kIcAizYXhIn8TzUvqzEDZNuDZ+aW7yE/+f1HJHXFjQcGNfv1kqzJSTBRBSlOgp6B/KZsz1K0a3ZTqP9dnxioQ=="
	        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.js"
	        integrity="sha512-8RnEqURPUc5aqFEN04aQEiPlSAdE0jlFS/9iGgUyNtwFnSKCXhmB6ZTNl7LnDtDWKabJIASzXrzD0K+LYexU9g=="
	        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.css"
	      integrity="sha512-uf06llspW44/LZpHzHT6qBOIVODjWtv4MxCricRxkzvopAlSWnTf6hpZTFxuuZcuNE9CBQhqE0Seu1CoRk84nQ=="
	      crossorigin="anonymous" referrerpolicy="no-referrer"/>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/mode/go/go.min.js"
	        integrity="sha512-dh8pBX6P5WZ63k5cSrF64G2QqKAHnLCjnP7vZOmz4peYWedM5lXyH/AqpUldSFBtubTK54kmwN6XAn/T2sVDVQ=="
	        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<link rel="stylesheet" type="text/css" href="/assets/main.css">
	<script>
        function eventIframe(event) {
            return Array.from(document.getElementsByTagName('iframe')).filter(iframe => {
                return iframe.contentWindow === event.source;
            })[0]
        }
        
        function editorMode(fileName) {
            if (fileName.endsWith(".go")) {
                return 'go'
            }
            return "null"
        }

        function load() {
            document.querySelectorAll('.CodeMirror').forEach(function (el) {
                el.remove()
            })
            document.querySelectorAll("textarea.editor").forEach(function (textarea) {
                const name = textarea.getAttribute('name')
                const mirror = CodeMirror.fromTextArea(textarea, {
                    lineNumbers: true,
                    mode: editorMode(name)
                })
                mirror.on("change", function (event) {
                    mirror.save()
                })
            })
        }

        function main() {
            window.addEventListener('message', function (event) {
                if (event.data.name === "write") {
                    const runBox = eventIframe(event).closest('[data-run-id]')
                    const output = runBox.querySelector('.output')
                    const line = new TextDecoder().decode(event.data.buf)
                    output.insertAdjacentText('beforeend', line)
                } else if (event.data.name === "exit") {
                    const runBox = eventIframe(event).closest('[data-run-id]')
                    const exit = runBox.querySelector('.exit')
                    exit.innerText = `exit with ${event.data.exitCode} after ${event.data.duration}ms`
                }
            })
            htmx.onLoad(load)
            load()
        }
	</script>
</head>

<body onload="main()">
<header>
	<div class="page-name">Playground</div>
	<div>
		<select id="select-example" hx-get="/" hx-select="#editor" hx-swap="outerHTML" hx-target="#editor"
		        name="example" aria-label="Select Example">
            {{- range .Examples}}
				<option value="{{.Name}}" {{if eq $.Name .Name}}selected{{end}}>{{.Name}}</option>
            {{end -}}
		</select>
		<a href="https://github.com/crhntr/playground" target="_blank">Source Code</a>
	</div>
</header>

<main>
    {{block "editor" . -}}
		<form id="editor" hx-indicator="#run" method="POST" action="/download">
            {{range .Archive.Files -}}
                {{- if eq .Name "main.go"}}
					<details open>
						<summary>{{.Name}}</summary>
                        {{template "editor-textarea" .}}
					</details>
                {{else}}
					<details>
						<summary>{{.Name}}</summary>
                        {{template "editor-textarea" .}}
					</details>
                {{end}}
            {{- end}}

			<div id="run">
				<div>
					<button id="run-trigger" type="submit" hx-post="/go/run" hx-target="#runner" hx-swap="innerHTML">
						Run
					</button>
					<button id="format" type="button" title='Format' hx-target='#editor' hx-post='/fmt'
					        hx-include='#editor'>Format
					</button>
					<button id="go-mod-tidy" type="button" title='go mod tidy' hx-target='#editor'
					        hx-post='/go/mod/tidy' hx-include='#editor'>Tidy Module
					</button>
					<button id="run-trigger" type="submit">Download</button>
				</div>
				<div id="runner"></div>
				<p id="loading-message">Your app is being built.</p>
			</div>
		</form>
    {{- end}}
</main>
{{block "footer" .}}
	<footer class="dark">
		<p id="go-version">Using Go {{.GoVersion}}</p>
		<p id="copyright-notice">{{.CopyrightNotice}}</p>
	</footer>
{{end}}
</body>
</html>

{{define "editor-textarea" }}
	<textarea
			id="code"
			class="editor"
			name="{{.Name}}"
			spellcheck="false"
			autofocus
			autocomplete="off"
			autocapitalize="off"
			wrap="off"
			aria-label="{{.Name}}"
	>{{.Data | bytesToString}}</textarea>
	<input name="filename" value="{{.Name}}" type='hidden'>
{{end}}
